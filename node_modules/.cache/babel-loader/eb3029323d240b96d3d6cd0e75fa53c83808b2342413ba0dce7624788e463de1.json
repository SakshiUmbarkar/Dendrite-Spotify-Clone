{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  title: '',\n  thumbnail: ''\n};\nexport const albumSlice = createSlice({\n  name: 'album',\n  initialState,\n  reducers: {\n    set: (state, action) => {\n      state.title = action.payload.title;\n      state.thumbnail = action.payload.thumbnail;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  set\n} = albumSlice.actions;\n\n// export const asyncSet = async ({title, thumbnail}) => dispatch => {\n//   dispatch(set({title, thumbnail}))\n// }\n\nexport default albumSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","title","thumbnail","albumSlice","name","reducers","set","state","action","payload","actions","reducer"],"sources":["/Users/sahilchavan/Downloads/Dendrite-Spotify-Clone/src/features/album/albumSlice.tsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\ninterface IAlbum {\n  title: string,\n  thumbnail: string,\n}\n\nconst initialState: IAlbum = {\n  title: '',\n  thumbnail: '',\n} \n\nexport const albumSlice = createSlice({\n  name: 'album',\n  initialState,\n  reducers: {\n    set: (state, action) => {\n      state.title = action.payload.title\n      state.thumbnail = action.payload.thumbnail\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { set } = albumSlice.actions\n\n// export const asyncSet = async ({title, thumbnail}) => dispatch => {\n//   dispatch(set({title, thumbnail}))\n// }\n\nexport default albumSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAO9C,MAAMC,YAAoB,GAAG;EAC3BC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EACpCK,IAAI,EAAE,OAAO;EACbJ,YAAY;EACZK,QAAQ,EAAE;IACRC,GAAG,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACtBD,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO,CAACR,KAAK;MAClCM,KAAK,CAACL,SAAS,GAAGM,MAAM,CAACC,OAAO,CAACP,SAAS;IAC5C;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEI;AAAI,CAAC,GAAGH,UAAU,CAACO,OAAO;;AAEzC;AACA;AACA;;AAEA,eAAeP,UAAU,CAACQ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}